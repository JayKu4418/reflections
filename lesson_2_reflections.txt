What happens when you initialize a repository? Why do you need to do it?

A .git file is created when you initialize a repository. By doing this, we can start having version control on the files found in the folder. We can commit files and have different versions of the files over time. 

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area allows you to package a bunch of commits you might have over multiple files to allow you to make a single commit. It also gives you a chance to think about what your logical change is and whether it makes sense. It is a temporary spot compared to your working directory and repository since files will not remain there. 

How can you use the staging area to make sure you have one commit per logical change?

You only need to add files to the staging area that are part of a single logical change. Even if you have modified files in the working directory if they are not part of the logical change they don't have to be added to the staging area.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

If you wanted to test out some experimental function which you were not ready to share yet. By branching you won't have to affect the product that the user is using and you can have separate workspace to work on your new ideas. When adding new features, each new feature can have a separate branch. Or if you have a bug,you can create a new branch for that bug fix.
